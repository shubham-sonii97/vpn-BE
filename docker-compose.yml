version: "3.8"

services:
  api:
    build:
      context: .
      dockerfile: api/src/Dockerfile
    env_file:
      - .env
    # map host 4000 -> container 4000 so external clients (Postman) can reach API
    ports:
      - "${API_PORT:-4000}:4000"
    restart: unless-stopped
    networks:
      - vpnnet
    # allow container to resolve host.docker.internal -> host gateway
    extra_hosts:
      - "host.docker.internal:host-gateway"
    # mount the server public key so API can read it (path used by SERVER_PUBLIC_KEY_FILE)
    volumes:
      - /etc/wireguard/server_public.key:/etc/wireguard/server_public.key:ro

  sidecar:
    build:
      context: .
      dockerfile: sidecar/Dockerfile
    env_file:
      - .env
    # sidecar must interact with host kernel network (wg)
    network_mode: "host"
    cap_add:
      - NET_ADMIN
    # mount host wg binary and keys for sidecar to use
    volumes:
      - /usr/bin/wg:/usr/bin/wg:ro
      - /etc/wireguard:/etc/wireguard:ro
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "curl -sSf http://127.0.0.1:8443/healthz || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  # keep here if you later want DB container
  db_data:

networks:
  vpnnet:
    name: vpnnet
